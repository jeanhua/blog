{"meta":{"title":"jeanhua's blog","subtitle":"","description":"欢迎来到我的博客，本项目采用hexo框架","author":"jeanhua","url":"http://blog.jeanhua.cn","root":"/"},"pages":[{"title":"","date":"2024-11-02T09:41:40.603Z","updated":"2024-11-02T09:41:40.603Z","comments":true,"path":"404.html","permalink":"http://blog.jeanhua.cn/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2024-09-12T15:10:53.342Z","updated":"2024-09-12T15:10:53.342Z","comments":true,"path":"about/index.html","permalink":"http://blog.jeanhua.cn/about/index.html","excerpt":"","text":"我是一名2023级本科生，就读于四川大学计算机科学与技术专业，感谢您的浏览。 updating…"},{"title":"所有分类","date":"2024-09-12T15:08:24.911Z","updated":"2024-09-12T15:08:24.911Z","comments":true,"path":"categories/index.html","permalink":"http://blog.jeanhua.cn/categories/index.html","excerpt":"","text":""},{"title":"友链","date":"2024-09-14T13:33:29.080Z","updated":"2024-09-14T13:33:29.080Z","comments":true,"path":"friends/index.html","permalink":"http://blog.jeanhua.cn/friends/index.html","excerpt":"","text":"给我留言&#106;&#x65;&#x61;&#x6e;&#104;&#117;&#97;&#x5f;&#x6f;&#x66;&#x66;&#105;&#x63;&#x69;&#97;&#x6c;&#x40;&#x6f;&#117;&#116;&#108;&#x6f;&#111;&#x6b;&#x2e;&#99;&#x6f;&#x6d;互加友链😋"},{"title":"所有标签","date":"2024-09-12T15:08:48.483Z","updated":"2024-09-12T15:08:48.483Z","comments":true,"path":"tags/index.html","permalink":"http://blog.jeanhua.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"C语言中文乱码解决方案-vscode","slug":"C语言中文乱码解决方案-vscode","date":"2024-12-09T13:46:48.000Z","updated":"2024-12-09T13:54:56.371Z","comments":true,"path":"2024/12/09/d0787b82528e/","permalink":"http://blog.jeanhua.cn/2024/12/09/d0787b82528e/","excerpt":"","text":"最近写数据结构作业发现vscode写C++编译后输出中文会乱码，之前用visual studio没有这种情况，研究了一下发现是源代码文件编码问题，默认是utf-8编码，改为gb2312保存再编译就好了","categories":[{"name":"C++","slug":"C","permalink":"http://blog.jeanhua.cn/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://blog.jeanhua.cn/tags/C/"}]},{"title":"浅谈国内的计算机高等教育","slug":"浅谈国内的计算机高等教育","date":"2024-11-22T13:13:21.000Z","updated":"2024-12-08T12:33:09.070Z","comments":true,"path":"2024/11/22/339b271d31c1/","permalink":"http://blog.jeanhua.cn/2024/11/22/339b271d31c1/","excerpt":"","text":"读了一年大学了，在此分享一下我的感想。 先说我的结论1.国内的计算机高等教育很难培养出合格的计算机人才，所谓合格者，也并非学校之功，更非老师之功。 2.国内的计算机环境很难孕育技术人才。 学校方面1.拘泥于理论知识，不注重实际情况 学校所教，例如大一上的C语言，上课直接PPT一放，讲解代码。按理说应该没什么问题，毕竟我们初高中不就是这样过来的，但是各位没有意识到，计算机是一门实用的科学，所以就导致好多人编译报错无法解决，编译器不会选择，一个学期过去了，除了书上的几点简单算法题，从来不会自己拓展，编程能力堪忧。 学校从来不会教一些流行的工具使用，比如现代化的编译器，代码托管平台的使用，构建代码项目等。 2.一堆无意义的课，徒增负担 诸如思政课，马原，之类的我就不说了，大学物理，还有大物实验这种东西也来加进计算机的专业教育，让人心烦意乱。(这里不再过多赘述，各位应该心有体会) 3.专业的选修课选不上 什么思政，马原，大物一堆课内置在课表里，而诸如java，python，gpu编程之类的专业相关的课却要抢，而且基本选不上，知道的说我是计算机专业，不知道的随便套用任何一个工科都好像能说得过去，最离谱的是商学院等其他学院python课余量属实充足，计算机学院人数众多，一周就开两个课…… 大环境方面1.严苛的审核，技术处处碰壁 我之前在github上放的一个思政期末复习资料仓库，被gitee搬到自己平台上，几个月后突然给我发一个邮件封禁了这个仓库，说涉及政治敏感信息。 诸如爬虫之类的程序，也无法在国内的代码托管平台托管，时不时会封禁 gitee之前还有类似于github page的网页功能，尽管使用需要各种实名认证，人脸识别，后面这个功能也去掉了 2.及其严苛的备案制度 我买了个域名，要备案，填写各种信息，什么身份证照片，人脸照片，人脸识别，还有给你打电话确认，前前后后处理大概半个多月，而且特别声明备案目的不能是博客，但是你实际运行的是博客他不会管，后来我才明白，这只不过是有个随便关闭你网站的借口 我想在网站接入QQ登录，结果要告知我前往腾讯云那里备案(我的域名是在华为云备案的)，我又转去那里，又要要求购买腾讯云服务器才能备案，最终不了了之 小程序备案也和上述情况一致，而我之前在给一个营销团队做一个管理系统，要接入微信支付，后面告知我个人备案不能使用微信支付，要求得用企业备案…… 众多非法网站都可以接入微信支付，我一个简单的人员管理系统说个人备案不给接入👍 最终这个也不了了之 3.国内的互联网大厂，劣币驱逐良币 诸如csdn，一堆搬来搬去的而没有任何效果文章，与搜索引擎一起狼狈为奸，一个搜索页面，点开不同的项，出来的都是同一篇文章，尽管评论区都说这篇文章有问题 而如博客园有的优质文章却难以检索，如今博客园也开始搬运各种史了 4.与世隔绝的互联网，并不全面的镜像，消磨兴趣 在flutter开发构建安卓项目的时候，无法构建，网上的教程是改一堆地方的镜像，改来改去，不小心又哪哪报错，而且东西更新后又出现在新的地方找不到，最后只能通过特殊手段，耗费数十分钟才完成构建，极大的消磨兴趣 最终结果 很多计算机的同学，并未显著的展现出他们的专业知识，和其他的一些工科专业相比，没有特征点 还在使用古老的编译器 不会使用代码托管平台进行协作与分享 没有独自解决问题的能力 无法做出现代化的产品，即使最简单的小软件 为什么感觉高中比大学充实，就是因为高中学的每一科都是有用的，都能在你的分数上面提上一笔，大学学的一堆无意义的东西，简直是消磨生命。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://blog.jeanhua.cn/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"计算机","slug":"计算机","permalink":"http://blog.jeanhua.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"高等教育","slug":"高等教育","permalink":"http://blog.jeanhua.cn/tags/%E9%AB%98%E7%AD%89%E6%95%99%E8%82%B2/"}]},{"title":"浅谈C语言的scanf","slug":"浅谈C语言的scanf","date":"2024-11-02T12:43:11.000Z","updated":"2024-11-02T13:00:29.929Z","comments":true,"path":"2024/11/02/af6db4fbaa29/","permalink":"http://blog.jeanhua.cn/2024/11/02/af6db4fbaa29/","excerpt":"前言 最近看到小登的作业，计算输入的数学表达式，只包含加减乘除，不考虑优先级，感觉的好像要用到字符串分割，但是作为新生的作业，应该不会涉及这么难的过程。","text":"前言 最近看到小登的作业，计算输入的数学表达式，只包含加减乘除，不考虑优先级，感觉的好像要用到字符串分割，但是作为新生的作业，应该不会涉及这么难的过程。 投机取巧？ 如下： 1234567891011121314151617181920212223242526272829303132#include&lt;stdio.h&gt;int main() &#123; float num,result; char tag; scanf(&quot;%f&quot;, &amp;result); while (true) &#123; tag = getchar(); if (tag == &#x27;\\n&#x27;) &#123; break; &#125; else &#123; scanf(&quot;%f&quot;, &amp;num); switch (tag) &#123; case &#x27;+&#x27;: result += num; break; case &#x27;-&#x27;: result -= num; break; case &#x27;*&#x27;: result *= num; break; case &#x27;/&#x27;: result /= num; &#125; &#125; &#125; printf(&quot;%f&quot;, result);&#125; 这里就用到scanf的特性了，格式化输入，scanf会自动匹配读入的字符，比如上文的%f就会自动匹配浮点类型的(整数类型会隐式转换为浮点型)，然后用getchar把运算符读入，读到换行符终止，即可完成","categories":[{"name":"C语言","slug":"C语言","permalink":"http://blog.jeanhua.cn/categories/C%E8%AF%AD%E8%A8%80/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"http://blog.jeanhua.cn/tags/C%E8%AF%AD%E8%A8%80/"}]},{"title":"做了一个聊天软件，记录踩的坑","slug":"做了一个聊天软件","date":"2024-09-28T16:13:32.000Z","updated":"2024-09-29T10:47:46.721Z","comments":true,"path":"2024/09/29/1fd212270409/","permalink":"http://blog.jeanhua.cn/2024/09/29/1fd212270409/","excerpt":"","text":"仓库地址 客户端：jeanhua&#x2F;alphab-client: 简洁美观的匿名加密聊天程序(客户端) safe-chat plus (github.com) 服务端：jeanhua&#x2F;alphab-server: 匿名加密聊天程序(服务器) (github.com) 电脑端截图 手机端截图 分为以下几个方面 flutter C# 加密 其他 一、flutter既然是聊天软件，聊天列表是少不了的，这里我还是常规的用Listview，但是这个会遇到以下几个问题 自动滑动问题 当收到消息或者发送消息时，一般要将列表滑动到底部，即使用下面的代码 1scrollController_scoll.jumpTo(scrollController_scoll.position.maxScrollExtent); 但是当消息长一点就滑动不全，就是划不到底部，网上的解决办法是延迟一秒钟再调用这个代码，但是这个观感就不好，有时候要显示的东西多了也任然无法解决 实际这个本质就是页面没渲染完成就滑动了，此时的maxScrollExtent不是底部，所以我们改成这行代码就行了 123SchedulerBinding.instance.addPostFrameCallback((_) &#123; scrollController_scoll.jumpTo(scrollController_scoll.position.maxScrollExtent);&#125;); 这行是等待页面刷新完成后执行对应代码，就会滑动到底部了 Listview滑动卡顿问题 因为是类似于QQ的聊天界面，我的listview的item是函数返回的行，可能是图片或者文字，然后就出现一个问题，当有图片时滑动会卡一下，网上也没有找到原因，经过多番研究后明白了 由于Listview会自动绘制看见的项目，看不见的会销毁，然后图片，因为图片大小不一，我只指定了宽度，然后高度会自动按比例缩放，就会导致绘制图片的时候卡一下，解决办法也很简单，在外层包一个组件然后指定高度为图片高度就行 二、C#我服务器端是用C#做的，遇到以下几个问题 json 由于C#是强类型语言，一般将json反序列化是要写一个类，比较麻烦，这里有个简单的办法，就是将消息发送的json都用String:String的格式，然后直接反序列化为Dictionary&lt;String,String&gt;就好了，简单快捷 三、加密对于加密我是先用RSA非对称加密传输AES密钥然后后面用AES对称加密的(为什么不直接用RSA，因为非对称加密速度非常慢然后性能消耗比较大)，然后一般传的是base64编码的内容 然后flutter和C#加密又有不同，flutter默认的填充方式和C#有点区别，这个不注意看半天不知道问题出在哪里 四、其他网络传输 我刚开始是用socket传数据的，本来没啥问题，后面传图片的时候遇到问题了，一直json反序列化失败，要么就是无法解密base64，看了好久，发现问题处在socket的传输机制上，由于socket是流式传输，数据过长时会导致分包，就是你C#那边接收一次完成收到的数据不是完整的，就会导致解密失败 解密办法就是自己手动把数据分开，然后在里面编一个序号，服务端再重组，当然有一个最简单的办法，换成websocket，这个是应用层的，已经把分包和重组封装完毕了，直接暴力传就行，C#推荐fleck包 其他的还有好多坑，时间过得太久忘了……","categories":[{"name":"随笔","slug":"随笔","permalink":"http://blog.jeanhua.cn/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"软件","slug":"软件","permalink":"http://blog.jeanhua.cn/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"代码","slug":"代码","permalink":"http://blog.jeanhua.cn/tags/%E4%BB%A3%E7%A0%81/"},{"name":"flutter","slug":"flutter","permalink":"http://blog.jeanhua.cn/tags/flutter/"}]},{"title":"吐槽flutter","slug":"吐槽flutter","date":"2024-09-20T15:13:58.000Z","updated":"2024-09-20T15:17:24.829Z","comments":true,"path":"2024/09/20/37610e31485f/","permalink":"http://blog.jeanhua.cn/2024/09/20/37610e31485f/","excerpt":"准备拿flutter框架开发大创的前端项目，趁着其他部分没准备好，随便做一个app练练手，本来想继续改我那个safe-chat项目的，但是写的太烂了，导致我现在看不懂了🤣，而且那玩意只做了个发文字的功能，丑的一批，于是从头再来，然后加一下气泡和颜色，加发图片的功能，美化一下ui 写TextField的时候本来想设置限制行数的，结果遇到一个抽象玩意儿","text":"准备拿flutter框架开发大创的前端项目，趁着其他部分没准备好，随便做一个app练练手，本来想继续改我那个safe-chat项目的，但是写的太烂了，导致我现在看不懂了🤣，而且那玩意只做了个发文字的功能，丑的一批，于是从头再来，然后加一下气泡和颜色，加发图片的功能，美化一下ui 写TextField的时候本来想设置限制行数的，结果遇到一个抽象玩意儿 这么看没问题 1234567Container( decoration: const BoxDecoration(color: Colors.yellow), child: const TextField( style: TextStyle(color: Colors.black, fontSize: 25), maxLines: 14, ), ) 但是 问题居然出在这里 1234567Container( decoration: const BoxDecoration(color: Colors.yellow), child: const TextField( style: TextStyle(color: Colors.black, fontSize: 25), maxLines: null, //设置为null就正常了 ),) 最大行数拿去当占位符了是吧。。。。 还是得靠代码整活","categories":[{"name":"随笔","slug":"随笔","permalink":"http://blog.jeanhua.cn/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"flutter","slug":"flutter","permalink":"http://blog.jeanhua.cn/tags/flutter/"},{"name":"吐槽","slug":"吐槽","permalink":"http://blog.jeanhua.cn/tags/%E5%90%90%E6%A7%BD/"}]},{"title":"大学最抽象的课程——大物实验","slug":"大学最抽象的课程——大物实验","date":"2024-09-16T12:12:09.000Z","updated":"2024-09-18T00:25:15.574Z","comments":true,"path":"2024/09/16/45f07bb9c805/","permalink":"http://blog.jeanhua.cn/2024/09/16/45f07bb9c805/","excerpt":"大学理工科专业普遍要上的一门抽象课程 看到课表里面有一个大学物理和大学物理实验，还以为是联系在一起的，就和那些专业科的实验差不多，没成想上课才知道，这两者基本没啥关联。","text":"大学理工科专业普遍要上的一门抽象课程 看到课表里面有一个大学物理和大学物理实验，还以为是联系在一起的，就和那些专业科的实验差不多，没成想上课才知道，这两者基本没啥关联。 大物实验连着上四节课，先拿一个小时讲知识，然后教操作，接着就开始实验，然后做完实验后写一大堆的实验报告。自始至终我都不知道在讲什么，莫名其妙就开始实验了，照葫芦画瓢做完实验后，实验报告又是要抄一大堆原理，还有什么画图，有种初高中被罚抄的感觉。 附 罚抄成果What can I say? 悲矣","categories":[{"name":"随笔","slug":"随笔","permalink":"http://blog.jeanhua.cn/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://blog.jeanhua.cn/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"博客在云服务器和github之间的同步","slug":"博客在云服务器和github之间的同步","date":"2024-09-14T15:05:15.000Z","updated":"2024-09-19T15:36:47.361Z","comments":true,"path":"2024/09/14/ebdfcd8245d2/","permalink":"http://blog.jeanhua.cn/2024/09/14/ebdfcd8245d2/","excerpt":"博客框架 hexo，网页服务器 apache2 因为我的博客是放在云服务上的，然后又希望在GitHub上面同步，传统的办法是使用git把public里面的文件放到GitHub上面，然后手动将文件复制到云服务上，这就有一个问题，就是当文章删除的时候会导致删不掉，同时也很繁杂。","text":"博客框架 hexo，网页服务器 apache2 因为我的博客是放在云服务上的，然后又希望在GitHub上面同步，传统的办法是使用git把public里面的文件放到GitHub上面，然后手动将文件复制到云服务上，这就有一个问题，就是当文章删除的时候会导致删不掉，同时也很繁杂。 网上有的办法普遍是在云服务上面弄个git仓库，总之一堆心烦意乱的配置，于是我在想有没有更简单的办法 🤣还真有 只要本地仓库push到github，然后云服务器pull一下不就行了，直截了当 但是手动push然后pull确实也麻烦 python启动！ 12345678910111213141516171819202122232425262728293031323334import paramikoimport os# 处理本地数据with open(&quot;do.bat&quot;,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as f: f.write(&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy&quot;) #不知道为什么python的os.system()会报错，所以写一个bat算了 f.close()os.system(&quot;.\\\\do.bat&quot;)print(&quot;本地处理完成&quot;)# SSH连接信息hostname = &#x27;192.168.1.1&#x27; #这里填写服务器ipport = 22 # 默认SSH端口是22，根据实际情况修改username = &#x27;root&#x27;#这里换成账户password = &#x27;******&#x27;#这里换成你的云服务器密码command = &#x27;cd /var/www/blog/ &amp;&amp; git pull origin main&#x27; #换成云服务对应的仓库地址# 创建SSH对象ssh = paramiko.SSHClient()# 允许连接不在know_hosts文件中的主机ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())# 连接服务器ssh.connect(hostname, port, username, password)# 执行命令stdin, stdout, stderr = ssh.exec_command(command)print(&quot;输出：&quot;, stdout.read().decode())print(&quot;错误：&quot;, stderr.read().decode())# 关闭连接ssh.close()print(&quot;完成&quot;) 完工！","categories":[{"name":"方法论","slug":"方法论","permalink":"http://blog.jeanhua.cn/categories/%E6%96%B9%E6%B3%95%E8%AE%BA/"}],"tags":[{"name":"python","slug":"python","permalink":"http://blog.jeanhua.cn/tags/python/"},{"name":"服务器","slug":"服务器","permalink":"http://blog.jeanhua.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"博客","slug":"博客","permalink":"http://blog.jeanhua.cn/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"ssh","slug":"ssh","permalink":"http://blog.jeanhua.cn/tags/ssh/"}]},{"title":"ubuntu服务器配置网站","slug":"ubuntu服务器配置网站","date":"2024-07-20T14:05:25.000Z","updated":"2024-09-12T14:52:14.066Z","comments":true,"path":"2024/07/20/85976580bd9f/","permalink":"http://blog.jeanhua.cn/2024/07/20/85976580bd9f/","excerpt":"","text":"一、安装apache212sudo apt-get updatesudo apt-get install apache2 然后在地址栏输入公网IP看是否能访问到如下页面 此时网站的页面在&#x2F;var&#x2F;www&#x2F;html&#x2F;目录下，修改即可 二、配置多网站如果想要一个服务器配置多个网站比如 jeanhua.cn 和 blog.jeanhua.cn(通过主机头来区分) 在Apache的配置目录中（通常是&#x2F;etc&#x2F;apache2&#x2F;sites-available），为每个网站创建一个新的配置文件。 对于blog.jeanhua.cn：1sudo nano /etc/apache2/sites-available/blog.jeanhua.cn.conf 添加以下内容： 123456789101112131415&lt;VirtualHost *:80&gt; ServerAdmin **@qq.com # 这里是你的邮箱 ServerName blog.jeanhua.cn # 域名 ServerAlias www.blog.jeanhua.cn # 别名 DocumentRoot /var/www/blog # 网页根目录 &lt;Directory /var/www/blog&gt; Options Indexes FollowSymLinks #这里建议把 Indexes 去掉，避免网页目录结构暴露 AllowOverride All Require all granted &lt;/Directory&gt; ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined&lt;/VirtualHost&gt; 对于jeanhua.cn：1sudo nano /etc/apache2/sites-available/jeanhua.cn.conf 添加以下内容： 123456789101112131415&lt;VirtualHost *:80&gt; ServerAdmin # 这里填邮箱 ServerName jeanhua.cn # 域名 ServerAlias www.jeanhua.cn # 别名 DocumentRoot /var/www/html # 网页根目录 &lt;Directory /var/www/html&gt; Options Indexes FollowSymLinks #这里建议把 Indexes 去掉，避免网页目录结构暴露 AllowOverride All Require all granted &lt;/Directory&gt; ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined&lt;/VirtualHost&gt; 接下来启用配置 12sudo a2ensite blog.jeanhua.cn.confsudo a2ensite jeanhua.cn.conf 注意：如果你的服务器上已经有一个默认的虚拟主机配置（通常名为000-default.conf），并且你不想使用它，你可以通过运行下面的命令来禁用它 1sudo a2dissite 000-default.conf 最后，重载Apache配置以应用更改： 1sudo systemctl reload apache2 三、配置https正常情况下到上面已经结束了，但是我们访问时浏览器经常提示页面不安全，于是我们要配置https，同时提升网站安全性。 1.安装 CertbotCertbot 是一个自动化的证书颁发和管理工具，可以用来获取 Let’s Encrypt 的证书。 12sudo apt-get updatesudo apt-get install certbot python3-certbot-apache 2.获取 SSL 证书使用 Certbot 获取 SSL 证书，同时自动修改 Apache 配置文件以启用 HTTPS。 对于 blog.jeanhua.cn： 1sudo certbot --apache -d blog.jeanhua.cn -d www.blog.jeanhua.cn 对于 jeanhua.cn： 1sudo certbot --apache -d jeanhua.cn -d www.jeanhua.cn 在过程中，Certbot 可能会询问你一些问题，比如你的电子邮件地址和是否需要自动重定向 HTTP 流量到 HTTPS，请输入你的邮箱并稍后前往邮箱点击链接验证 3.检查 Apache 配置Certbot 应该已经自动修改了 Apache 的配置文件，为每个域名添加了 HTTPS 虚拟主机配置。你可以通过以下命令来检查配置文件： 12sudo nano /etc/apache2/sites-available/blog.jeanhua.cn-le-ssl.confsudo nano /etc/apache2/sites-available/jeanhua.cn-le-ssl.conf 4.启用 SSL 虚拟主机如果 Certbot 没有自动启用新的 SSL 虚拟主机配置文件，你可以手动启用它们： 12sudo a2ensite blog.jeanhua.cn-le-ssl.confsudo a2ensite jeanhua.cn-le-ssl.conf 5.重启 Apache1sudo systemctl restart apache2 大功告成，现在访问你的页面应该可以看到是https安全的了","categories":[],"tags":[{"name":"服务器","slug":"服务器","permalink":"http://blog.jeanhua.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"网站","slug":"网站","permalink":"http://blog.jeanhua.cn/tags/%E7%BD%91%E7%AB%99/"}]},{"title":"服务器入门","slug":"服务器入门","date":"2024-07-15T03:08:00.000Z","updated":"2024-09-12T14:52:37.623Z","comments":true,"path":"2024/07/15/259b0a619408/","permalink":"http://blog.jeanhua.cn/2024/07/15/259b0a619408/","excerpt":"","text":"刚买了一个云服务器，在这里浅谈一下入门配置信息，方便更好使用服务器 1.服务器系统镜像选择建议使用ubuntu系统 2.添加一个用户(一般不直接用root用户)Ⅰ.添加用户 1sudo useradd -r -m -s /bin/bash jeanhua #jeanhua是用户名称 其中参数的意义如下： -r：建立系统账号-m：自动建立用户的登入目录-s：指定用户登入后所使用的shell Ⅱ.创建密码 1sudo passwd jeanhua Ⅲ.分配权限 123456sudo chmod +w /etc/sudoers # 添加配置文件写权限sudo vim /etc/sudoers # 编辑配置文件# 然后添加下图的配置语句，并且保存修改sudo chmod -w /etc/sudoers # 去掉配置文件写权限 现在可以用新建的用户登陆了 3.更多配置ftp服务器 由于本地与服务器之间的文件传输不便，于是配置ftp服务器是刚需 输入指令安装 1sudo apt-get install vsftpd 开启服务 (记得去服务器管理界面把安全组配置改一下，开放20，21端口) 1service vsftpd start 电脑端下载FileZilla软件 安装顺序配置连接","categories":[],"tags":[{"name":"服务器","slug":"服务器","permalink":"http://blog.jeanhua.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"关于Visual Studio报错scanf_s等*_s代码报错的解决方案","slug":"关于Visual-Studio报错scanf-s等-s代码报错的解决方案","date":"2024-06-17T08:41:00.000Z","updated":"2024-09-18T00:26:48.148Z","comments":true,"path":"2024/06/17/c85462058ea9/","permalink":"http://blog.jeanhua.cn/2024/06/17/c85462058ea9/","excerpt":"","text":"问题：用visual studio写代码时经常碰到scanf报错,strcpy报错等情况 但是又不想改代码怎么办呢？ 解决办法 点击”项目” 点击”属性” “C&#x2F;C++” “常规” “SDL检查”设置为否 然后确定即可正常编译","categories":[],"tags":[{"name":"visual studio","slug":"visual-studio","permalink":"http://blog.jeanhua.cn/tags/visual-studio/"}]},{"title":"python爬取校园集市帖子并生成词云图","slug":"python爬取校园集市帖子并生成词云图","date":"2024-06-15T08:37:00.000Z","updated":"2024-09-18T00:26:57.316Z","comments":true,"path":"2024/06/15/986d735abcc0/","permalink":"http://blog.jeanhua.cn/2024/06/15/986d735abcc0/","excerpt":"注：本篇需要python基础，json基础 前言：上篇我们学习了怎么用python获取百度热搜，在这篇中，我们将进一步学习，利用python爬取校园集市帖子并生成词云图","text":"注：本篇需要python基础，json基础 前言：上篇我们学习了怎么用python获取百度热搜，在这篇中，我们将进一步学习，利用python爬取校园集市帖子并生成词云图 懒的话直接点这里进入完整代码仓库🤣 [toc]灵感背景：经常在群里看见机器人转发的校园集市帖子，于是想要爬取下来分析一下 第一步，分析请求 点击链接进入浏览器页面 按下F12打开浏览器开发者界面 点击网络，按下F5刷新 刷新后如图所示 点击预览，寻找目标请求 最终找到请求 点击标头，获取url 第二步，编写代码1234567import requests#发送http请求url = &#x27;https://u.xiaouni.com/user-api/content/article/info?id=17020&#x27;response = requests.get(url=url)#打印结果print(response.text) 结果如下 1&#123;&quot;code&quot;:200,&quot;msg&quot;:&quot;\\u8bf7\\u6c42\\u6210\\u529f&quot;,&quot;data&quot;:&#123;&quot;id&quot;:17020,&quot;title&quot;:&quot;\\u7f8e\\u56fd\\u8001\\u5e74\\u5b66\\u672f\\u4f1a\\u8baeGSA&quot;,&quot;content&quot;:&quot;\\u6709\\u65e0\\u5144\\u5f1f\\u59d0\\u59b9\\u4e4b\\u524d\\u53bb\\u8fc7\\u7f8e\\u56fd\\u5b66\\u672f\\u5e74\\u4f1aGSA\\uff0c\\u6c42\\u52a9&quot;,&quot;user_id&quot;:16872,&quot;reading&quot;:243,&quot;contact_id&quot;:16736,&quot;school_id&quot;:1,&quot;classify_id&quot;:2,&quot;created_at&quot;:1718436786,&quot;images&quot;:[],&quot;art_like&quot;:0,&quot;is_end&quot;:0,&quot;is_top&quot;:0,&quot;is_rec&quot;:0,&quot;status&quot;:1,&quot;account&quot;:&quot;\\u82f9\\u679c\\u53d1\\u7b8d&quot;,&quot;avatar&quot;:&quot;https:\\/\\/os.xiaouni.com\\/uploadsimage\\/2023\\/09-01\\/c3e65afd79583b01.jpg&quot;,&quot;zone_id&quot;:4,&quot;is_like&quot;:0,&quot;is_collect&quot;:0,&quot;collect_count&quot;:0,&quot;comment_count&quot;:0,&quot;user&quot;:&#123;&quot;id&quot;:16872,&quot;is_authority&quot;:0,&quot;nickname&quot;:&quot;\\u5c0f\\u7ea2&quot;,&quot;portrait&quot;:&quot;https:\\/\\/thirdwx.qlogo.cn\\/mmopen\\/vi_32\\/ECkvJVPXNstK1G0syFKuAvko2dF3qibGKLich2mscnYPfiaDylZrLICCG9phvUKbBaDAuk8JgbVibYyyd1AWgs9Qqg\\/132&quot;,&quot;leaver_color&quot;:&quot;#FADC3A&quot;,&quot;leaver_name&quot;:&quot;\\u5927\\u4e00&quot;&#125;,&quot;contact&quot;:&#123;&quot;id&quot;:16736,&quot;money&quot;:&quot;0&quot;,&quot;contact_way_id&quot;:2,&quot;contact_info&quot;:&quot;3076689048&quot;,&quot;contact_name&quot;:&quot;&quot;,&quot;contact_way&quot;:&#123;&quot;id&quot;:2,&quot;name&quot;:&quot;QQ&quot;&#125;&#125;,&quot;school&quot;:&#123;&quot;id&quot;:1,&quot;name&quot;:&quot;\\u534e\\u897f&quot;&#125;,&quot;classify&quot;:&#123;&quot;id&quot;:2,&quot;name&quot;:&quot;\\u4e07\\u80fd\\u6c42\\u52a9&quot;,&quot;is_anonymous&quot;:0&#125;&#125;&#125; 我们发现这个是json格式的内容，而且是以unicode进行编码的结果我们进一步修改代码，获取帖子标题和内容 12345678910111213import jsonimport requests# 发送http请求url = &#x27;https://u.xiaouni.com/user-api/content/article/info?id=17020&#x27;response = requests.get(url=url)# json格式化json_data = json.loads(response.text)# 获取标题和内容title = json_data[&#x27;data&#x27;][&#x27;title&#x27;]content = json_data[&#x27;data&#x27;][&#x27;content&#x27;]# 打印标题和内容print(&#x27;title:\\t&#x27;+title,&#x27;\\ncontent:&#x27;+content) 结果如下 12title: 美国老年学术会议GSA content:有无兄弟姐妹之前去过美国学术年会GSA，求助 成功获取集市帖子 第三步，批量获取帖子我们改进代码，获取最近的300条帖子，写到一个txt文件中方便后续使用 1234567891011121314151617181920212223242526272829303132import jsonimport requestsclass getContent: def __init__(self, id: int): self.url = &#x27;https://u.xiaouni.com/user-api/content/article/info?id=&#x27; + str(id) def run(self): # 发送http请求 response = requests.get(url=self.url) # json格式化 json_data = json.loads(response.text) # 获取状态码，标题和内容 status_code = json_data[&#x27;code&#x27;] if status_code == 200: title = json_data[&#x27;data&#x27;][&#x27;title&#x27;] content = json_data[&#x27;data&#x27;][&#x27;content&#x27;] # 返回标题和内容 return &#x27;[&#x27;+title+&#x27;]:&#x27;+content+&#x27;\\n&#x27; else: return &#x27;none&#x27;for i in range(1, 301): id = 17020 - i print(i) text = getContent(id).run() if text != &#x27;none&#x27;: with open(&#x27;content.txt&#x27;, &#x27;a&#x27;, encoding=&#x27;utf-8&#x27;) as f: f.write(text) 结果如下 第四步，绘制词云图编写一个新的python脚本，将上面获取到的帖子内容绘制成词云图这步需要安装jieba库（注：这里只是jieba库的简单运用，并未排除一些无意义的词，若要更加出色的表现，可进行jieba库的学习）和wordcloud库 12pip install jiebapip install wordcloud 接下来编写代码 123456789101112131415161718192021import jieba # 用于文章分词import wordcloud # 用于将词语生成词云图# 读取文本with open(&quot;content.txt&quot;, encoding=&quot;utf-8&quot;) as f: s = f.read()# 生成分词列表ls = jieba.lcut(s)# 从后向前遍历列表,删除长度小于2的元素for i in range(len(ls) - 1, -1, -1): if len(ls[i]) &lt; 2: del ls[i]text = &#x27; &#x27;.join(ls) # 连接成字符串stopwords = [&quot;可以&quot;, &quot;一个&quot;, &quot;有没有&quot;] # 去掉不需要显示的词wc = wordcloud.WordCloud(font_path=&quot;msyh.ttc&quot;, width=2560, height=1600, background_color=&#x27;white&#x27;, max_words=300, stopwords=stopwords) # msyh.ttc电脑本地字体，防止中文乱码wc.generate(text) # 生成词云图wc.to_file(&quot;1.png&quot;) # 保存词云图片 打开1.png结果如下 (词语出现频率越高，在词云图中的字就越大) 成功实现词云图绘制","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://blog.jeanhua.cn/categories/%E7%88%AC%E8%99%AB/"}],"tags":[{"name":"python","slug":"python","permalink":"http://blog.jeanhua.cn/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"http://blog.jeanhua.cn/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"python爬虫获取百度热搜","slug":"python爬虫获取百度热搜","date":"2024-06-15T07:13:00.000Z","updated":"2024-09-18T00:27:06.482Z","comments":true,"path":"2024/06/15/f349664957c7/","permalink":"http://blog.jeanhua.cn/2024/06/15/f349664957c7/","excerpt":"注：本篇学习需要python基础，html基础，xpath基础 前言：在上篇中，我们学习了怎么用python发送网页请求来获取网站的源代码，在这篇中，我们将进一步学习 本篇目标：利用python爬虫获取百度热搜","text":"注：本篇学习需要python基础，html基础，xpath基础 前言：在上篇中，我们学习了怎么用python发送网页请求来获取网站的源代码，在这篇中，我们将进一步学习 本篇目标：利用python爬虫获取百度热搜 第一步，用浏览器打开百度热搜网站百度热搜网址 https://top.baidu.com/board?tab=realtime页面如下： 第二步，按下F12键打开浏览器开发者界面，找到热搜文本元素 第三步，右键单击文本元素复制Xpath 第四步，编写代码123456789101112import requestsfrom lxml import etree# 发送HTTP请求获取网页内容url = &#x27;https://top.baidu.com/board?tab=realtime&#x27;response = requests.get(url)# 解析网页代码doc = etree.HTML(response.text)# 寻找Xpath结果result = doc.xpath(r&#x27;//*[@id=&quot;sanRoot&quot;]/main/div[2]/div/div[2]/div[2]/div[2]/a/div[1]/text()&#x27;) #这里粘贴复制下来的xpath# 打印结果print(result[0]) 结果如下： 100后女生成为上市公司总裁 我们成功获取到了第一个热搜，但是我们想要全部的热搜怎么办？于是我们继续复制第二个热搜的xpath，与第一个对比 12第一个 //*[@id=&quot;sanRoot&quot;]/main/div[2]/div/div[2]/div[ 2 ]/div[2]/a/div[1]/text()第二个 //*[@id=&quot;sanRoot&quot;]/main/div[2]/div/div[2]/div[ 3 ]/div[2]/a/div[1]/text() 我们发现中间有一个数字不同，因此发现规律，接下来我们改进代码 1234567891011121314import requestsfrom lxml import etree# 发送HTTP请求获取网页内容url = &#x27;https://top.baidu.com/board?tab=realtime&#x27;response = requests.get(url)# 解析网页代码doc = etree.HTML(response.text)# 拼接xpath获取结果for i in range(1,12): xpath = &#x27;//*[@id=&quot;sanRoot&quot;]/main/div[2]/div/div[2]/div[&#x27;+str(i)+&#x27;]/div[2]/a/div[1]/text()&#x27; res = doc.xpath(xpath) # 打印结果 print(str(i)+&quot;:&quot;+res[0]) 结果如下： 12345678910111: 中国为何始终属于“全球南方” 2: 00后女生成为上市公司总裁 3: 菲律宾“坐滩”军舰有多毒 4: 应对高温“渴”不容缓 5: 浙传毕业大片 这知识学了是真用 6: 大学生39天减重近20斤后“猝死” 7: 内蒙古一停工写字楼内发现遗体 8: 四级结束 已老实 9: 棚改小面积能换更大平方？谣言 10: 李开复：对中国大模型DAU很失望 11: 4名小男孩合力挪走挡路树枝 目标达成，在下一篇文章中，我们将进一步进阶学习","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://blog.jeanhua.cn/categories/%E7%88%AC%E8%99%AB/"}],"tags":[{"name":"python","slug":"python","permalink":"http://blog.jeanhua.cn/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"http://blog.jeanhua.cn/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"python爬虫入门","slug":"python爬虫入门","date":"2024-06-15T06:36:00.000Z","updated":"2024-12-08T12:32:19.367Z","comments":true,"path":"2024/06/15/347ddd515696/","permalink":"http://blog.jeanhua.cn/2024/06/15/347ddd515696/","excerpt":"注：本篇需要python基础，html基础","text":"注：本篇需要python基础，html基础 一、准备工作在开始编写Python爬虫之前，我们需要做一些准备工作。首先，确保你的电脑上已经安装了Python环境。然后，我们需要安装一些Python库，这些库可以帮助我们更方便地编写爬虫。其中最重要的库是requests。requests库用于发送HTTP请求。安装这个库非常简单，只需要在命令行中输入以下命令即可： 1pip install requests 二、简单爬虫示例假设我们要爬取一个名为 “http://www.quanshu.wang/“ 的网站内容 123456import requests# 发送HTTP请求获取网页内容url = &#x27;http://www.quanshu.wang/&#x27;response = requests.get(url)# 打印网页内容print(response.text) 运行这段代码，结果如下 12345678910111213&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width&quot;&gt; &lt;meta name=&quot;keywords&quot; content=&quot;全书网, 在线阅读, 最新小说,女生小说&quot;&gt; &lt;meta name=&quot;description&quot; content=&quot;全书网是一个免费在线阅读最新小说的网站，提供各种类型的小说供读者选择，快来全书网畅游阅读的世界吧！&quot;&gt; &lt;title&gt;全书网-在线全本免费小说&lt;/title&gt; &lt;meta http-equiv=&quot;content-language&quot; content=&quot;zh-CN&quot;/&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/template/home/default_web/css/style.css&quot; type=&quot;text/css&quot;/&gt; &lt;/head&gt; ……（省略下面的内容） 即可得到该网站的源码，但是我们发现这并没有什么使用价值，因为这只是未解析的网站源代码 在下篇文章中，我们将探讨如何利用爬虫获取实用的数据","categories":[{"name":"爬虫","slug":"爬虫","permalink":"http://blog.jeanhua.cn/categories/%E7%88%AC%E8%99%AB/"}],"tags":[{"name":"python","slug":"python","permalink":"http://blog.jeanhua.cn/tags/python/"},{"name":"爬虫","slug":"爬虫","permalink":"http://blog.jeanhua.cn/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"解决安装cuda时vs报错MSB3721的问题","slug":"解决安装cuda时vs报错MSB3721的问题","date":"2024-06-03T01:03:00.000Z","updated":"2024-09-21T05:30:21.785Z","comments":true,"path":"2024/06/03/c99c3826bf5e/","permalink":"http://blog.jeanhua.cn/2024/06/03/c99c3826bf5e/","excerpt":"","text":"以下几种可能 1.调整调试平台为x64 2.点击vs顶部导航栏的调试-&gt;最下面那一项属性-&gt;CUDA C&#x2F;C++ -&gt;Common-&gt;CUDA Dustuom Dir设置为你安装CUDA toolkit的目录 3.如果你的电脑系统用户名为中文，请前往环境变量-&gt;用户变量，将tmp和temp的值修改为一个新文件夹(建议在D盘里面创建一个temp文件夹，然后把C盘用户里面的temp文件夹里面的内容剪切到D:\\temp里面然后修改用户变量的值)","categories":[{"name":"方法论","slug":"方法论","permalink":"http://blog.jeanhua.cn/categories/%E6%96%B9%E6%B3%95%E8%AE%BA/"}],"tags":[{"name":"visual studio","slug":"visual-studio","permalink":"http://blog.jeanhua.cn/tags/visual-studio/"},{"name":"cuda","slug":"cuda","permalink":"http://blog.jeanhua.cn/tags/cuda/"}]},{"title":"博客markdown内嵌网页","slug":"博客markdown内嵌网页","date":"2024-04-27T10:31:00.000Z","updated":"2024-09-18T00:26:33.823Z","comments":true,"path":"2024/04/27/0b07f4fdbced/","permalink":"http://blog.jeanhua.cn/2024/04/27/0b07f4fdbced/","excerpt":"","text":"在markdown插入以下代码即可 123&lt;div style=&quot;position: relative; padding: 30% 45%;&quot;&gt; &lt;iframe style=&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot; src=&quot;网页链接&quot; frameborder=&quot;1&quot; scrolling=&quot;yes&quot; width=&quot;320&quot; height=&quot;240&quot;&gt;&lt;/iframe&gt;&lt;/div&gt; 比如下面的效果","categories":[],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://blog.jeanhua.cn/tags/markdown/"}]},{"title":"高等数学笔记","slug":"高等数学笔记","date":"2024-04-26T13:57:00.000Z","updated":"2024-09-12T14:53:02.572Z","comments":true,"path":"2024/04/26/b8db80ffa065/","permalink":"http://blog.jeanhua.cn/2024/04/26/b8db80ffa065/","excerpt":"","text":"高等数学概念、公式及常用结论内容整理来源于网络，可能存在疏漏和错误，若有侵权请 联系作者 jeanhua_official@outlook.com 删除 [toc] 第一章 函数 极限 连续常用的基本极限 1-无穷型 极限常用结论 常用的等价无穷小 x→∞，有时也可以使用等价无穷小代换。只要函数内部是无穷小即可。比如，x→∞时，sin(1&#x2F;x)~1&#x2F;x。 洛必达法则求极限什么时候可以用洛必达法则 洛必达法则的适应类型 泰勒公式求极限略，见下一章 利用单调有界准则求极限 证明极限存在（单调有界） 等式两端取极限进行运算 求极限时的常用结论 1.先证明有界性在利用单调有界准则求极限的时候，几个常用不等式一定要想到下列不等式来证明有界性！！！ 两个正数乘积或者两个正数相加的时候： 三个（或以上）正数相乘相加：算数平均值、几何平均值 2.再证明单调性 后项减前项 后项比前项 无穷小量阶的比较（其实就是0比0极限计算） 洛必达法则 等价代换 泰勒展开式 第二章 导数与微分导数与微分的概念导数与微分的几何意义 微分dy是切线上的改变量。用dy来代替$\\Delta$y,几何上是用切线上的改变量来代替实际上曲线上的改变量。换言之，再微小的局部，用直线的均匀变化来代替曲线的非均匀变化。 导数定义证明常用方法 连续、可导、可微之间的关系 倒数公式及求导法则基本初等函数的导数公式 隐函数求导法 反函数的导数 高阶导数常用的高阶导数公式 高阶导数求导方法： 直接使用公式 求一阶导数，二阶导数…归纳规律 第三章 微分中值定理及导数应用微分中值定理费马引理、罗尔定理 拉格朗日中值定理 拉格朗日中值定理几何意义：曲线上至少有一点的切线，和连接两端点的弦是平行的。 柯西中值定理 微分中值定理的关系 微分中值定理的本质都是用来建立导数和函数之间的联系。当题目给我们导数的条件，让我们研究函数，或者相反。我们就应该想到使用微分中值定理。 上面四个定理都是用来建立一阶导数和函数之间的关系，当我们需要建立高阶导数与函数之间的关系时，往往使用泰勒公式。 泰勒公式 泰勒展开式的意义 建立f(x）和高阶导数的关系· 用多项式来逼近f(x)。因为多项式求极限、导数和积分都很简单。 皮亚诺余项和拉格朗日余项的比较 皮亚诺余项称为（局部泰勒公式）。因为只能保证误差在$x$充分靠近$x_0$ 的时候比较小。 拉格朗日余项（整体）。在n趋向无穷的时候在一个大的范围内都是趋向于0的。 皮亚诺余项-局部性态-极限、极值 拉格朗日余项-整体性态-最值、不等式 常用的泰勒公式 泰勒公式记忆方法 其他几个泰勒展开式可以通过等价代换推导 导数应用极值 最值（最大值、最小值） 曲线的凹凸性 拐点 渐近线 快速判断、找到斜渐近线首先几何上理解渐近线：曲线上的一个动点，沿着曲线趋向于无穷远时，这个点到直线之间的距离，记作d。如果距离d趋向0，那么这条直线就叫做曲线的渐近线。如果这条直线是水平的，那就是水平渐近线。如果直线是垂直的，就是垂直渐近线。如果直线是斜的，那就是斜渐近线。 如果一个曲线能够写成一个线性函数（ax+b）加上趋向0的数的形式。那么这个曲线就有斜渐近线，且那个线性函数就是该曲线的斜渐近线。 方程的根（证明） 不等式的证明 常用不等式、基本不等式、经典不等式 中值定理证明题第四章 不定积分不定积分的概念与性质原函数存在定理 不定积分的性质 不定积分基本公式 三种主要积分法第一换元积分法（凑微分法） 常见的凑非分形式： (3)很常用 第二换元积分法（三角代换去根号 ） 分部积分法 三个常用的积不出的积分 三类常见可积函数积分有理函数积分 部分分式法：把分母分解因式分解到不能再分解，然后进行拆项，（这里可以通过初等数学里拆项裂项技巧进行操作）然后逐个积分。考试中该方法用得很少，基本都是特殊方法 三角有理式积分三角有理式可以通过万能代换法，一定能做出来，但是运算量很大。尽量使用特殊方法。 一般三角函数次数比较低的积分适合用万能代换，如果方次高的话，代换完了，有理式的方次也很高，比较麻烦。 简单无理函数积分 对于此类函数积分，很少能找到简单方法，所以一般都是用这种一般方法。 第五章 定积分与反常积分定积分的概念定积分的性质积分上限的函数微积分第一基本定理 定理 定积分的计算 利用已有公式（华氏公式） 计算n项和极限时，如何判断使用夹逼原理还是定积分的定义 计算n项和极限时，需要首先判断n项中的变化部分和主体部分。 用变化部分比上主体部分，当n趋向于无穷大时，如果等于0，那么说明变化部分是主体部分的次量级，这时候用夹逼原理。如果二者之比为非零常数，那么说明是同量级，这时候用定积分的定义来计算（提1&#x2F;n可爱因子）。 定积分几何意义算定积分的值两个常用基本结论： 无穷区间上的反常积分 上述极限存在，则称反常积分收敛；反之，则称其发散。 常用结论（p积分） 无界函数的反常积分 常用结论（p积分） 常考题型： 反常积分的敛散性（使用定义，使用p积分） 反常积分的计算 第六章 定积分的应用几何应用平面图形的面积 这两个公式可以算，或者可以直接对1做个二重积分，也能算出来面积。 旋转体体积该公式可以用，但下面有更一般方法。 环绕x轴旋转： 竖带绕着x轴旋转，形成一个以x轴为圆心的薄原片，然后再从a到b积分。 环绕y轴旋转： 竖带绕着y轴旋转，形成薄圆筒，把这个圆筒从某处截断，展开成一个长方体。长方体的长度就是圆筒的周长2*pi *x；长方体的截面积等于高度f(x)c乘以宽度dx。 注意：上面的方法可以用，但是同样的，能够有更加一般、简单的方法来处理这一类题目。可以使用二重积分来解决这类问题。 第七章 微分方程常微分方程的基本概念一阶微分方程可分离变量的方程 齐次微分方程 一阶线性微分方程 注意：只要加最后面一个常数C，前面的积分都不用加常数，而且前面积分积出来ln(x)都不用加绝对值。 高阶线性微分方程 方程（1）的两个解线性无关的充要条件是它们之比不为常数。 常系数齐次线性微分方程 虽然这个方法是用于二阶微分方程，但是三阶乃至于更高阶其实都适用。比如三阶方程解出来三个根，那么把这些根所对应的解加起来就能得到三阶微分方程的解。 ### 常系数非齐次线性微分方程 差分方程 第八章 多元函数微分学多元函数的极限多元函数的连续性偏导数 高阶偏导数 全微分 连续、可偏导及可微之间的关系 复合函数微分法 全微分形式的不变性 隐函数微分法 求偏微分的两种方法 直接对于给定的公式两端对x求偏导，整理得出z对x的偏导。z对y的偏导同理。注意：在使用此方法时，把z作为x，y的函数并进行求导。 使用上述公式求偏微分。注意：当对大F求x的偏导时，要把z当做常数来处理，千万不要当做函数继续求导！！！ 利用微分形式不变性。把dz用dx和dy表达出来。 无约束极值 条件极值及拉格朗日乘数法 最大值、最小值略 第九章 二重积分二重积分的概念及性质 二重积分的计算利用直角坐标计算 利用极坐标计算 利用函数的奇偶性计算 利用变量的轮换对称性计算 第十章 无穷级数常数项级数 级数的审敛准则正向级数 交错级数 任意项级数 幂级数 注意：当遇到缺项的幂级数的时候，不能直接用上面的这个公式，计算方法如下： 幂级数的性质 函数的幂级数展开 几个常用的展开式","categories":[{"name":"高等数学","slug":"高等数学","permalink":"http://blog.jeanhua.cn/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"}],"tags":[{"name":"高等数学","slug":"高等数学","permalink":"http://blog.jeanhua.cn/tags/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"},{"name":"笔记","slug":"笔记","permalink":"http://blog.jeanhua.cn/tags/%E7%AC%94%E8%AE%B0/"}]},{"title":"JHMG游戏引擎","slug":"JHMG游戏引擎","date":"2024-04-26T12:32:00.000Z","updated":"2024-09-12T14:51:28.598Z","comments":true,"path":"2024/04/26/5636a234bad4/","permalink":"http://blog.jeanhua.cn/2024/04/26/5636a234bad4/","excerpt":"","text":"✅JHMG 游戏引擎 JHMG 游戏引擎是我写的一个简单的2D游戏引擎，旨在帮助快速搭建和开发2D游戏。 源仓库地址 https://github.com/jeanhua/JHMG-engine gitee镜像地址 https://gitee.com/jeanhua/JHMG-engine 代码案例仓库 https://github.com/jeanhua/demo-codes-of-JHMG 特点 提供了游戏场景管理、游戏对象管理、界面显示、音效播放、用户输入处理等核心功能。 包含了一系列基础的自定义类，如字符串处理、数学计算和图形操作等。 易于使用和扩展，适合开发小型的2D游戏或图形应用程序。 依赖 EasyX：图形库，用于图形界面的绘制和处理。 下载你可以从GitHub仓库下载源代码： 1git clone https://github.com/jeanhua/JHMG-engine.git 或者点此下载各版本 类图 详细信息类介绍GameObject 类 描述： 代表游戏中的各种对象，可以是圆形、矩形、菱形或三角形等形状。 功能： 管理对象的位置、大小、图像和可见性。 处理对象之间的碰撞检测。 允许设置游戏循环中对象的自定义行为。 GameUI 类 描述： 管理游戏中的用户界面元素，例如图片等。 功能： 控制界面元素的位置、大小、图像和可见性。 处理用户界面元素的鼠标交互，如点击事件。 GameUIText 类 描述： 管理游戏用户界面中的文本元素。 功能： 设置文本的内容、位置和可见性。 GameSound 类 描述： 处理游戏音效的播放和控制。 功能： 播放、停止、暂停和恢复音效。 设置音效的音量和播放位置。 获取音效的长度和状态。 GameInput 类 描述： 处理游戏中的键盘输入。 功能： 捕获键盘按键事件。 GameScene 类 描述： 表示游戏中的一个场景，包含游戏对象、用户界面元素和文本元素。 功能： 管理场景中的游戏对象、用户界面元素和文本元素。 处理游戏循环中的场景逻辑。 MouseAction 类 描述： 处理游戏对象和用户界面元素的鼠标交互。 功能： 处理鼠标点击事件，并触发相应的回调函数。 GameInputBox 类 描述： 处理游戏中的输入框，允许用户输入文本。 功能： 显示输入框，并允许用户输入文本内容。 GameMessageBox 类 描述： 管理游戏中的消息框，用于向用户显示消息。 功能： 显示消息框，并显示指定的消息内容。 Game 类 描述： 表示游戏本身，管理游戏窗口、场景、帧率和声音等。 功能： 初始化游戏窗口并启动游戏循环。 设置游戏窗口的大小和标题。 控制游戏的帧率。 管理游戏中的场景和声音。 处理游戏中的输入事件。 String 类 描述： 字符串类型，提供字符串操作的功能。 功能： 构造函数：可以从字符串、字符数组或另一个 String 对象构造。 运算符重载：支持字符串的拼接、赋值、比较等操作。 类型转换：可以将字符串转换为整型、浮点型等数据类型。 字符串操作：包括索引、截取、查找等操作。 Fraction 类 描述： 分数类型，用于处理分数的计算。 功能： 构造函数：可以从整型、浮点型或分子分母构造分数。 运算符重载：支持分数的加减乘除等运算。 分数化简：将分数进行化简操作。 类型转换：可以将分数转换为浮点型。 Vector2 类 描述： 二维向量，表示坐标或方向。 功能： 构造函数：可以从两个浮点数构造二维向量。 运算符重载：支持向量的加减乘除等运算。 向量操作：包括距离计算、叉乘、点乘等操作。 List 类模板 描述： 链表模板类，用于管理元素的链表结构。 功能： 添加元素：在链表末尾添加元素。 删除元素：删除链表中的节点。 构造函数：初始化链表。 析构函数：释放链表内存。 Matrix 类 描述： 矩阵类，用于矩阵的运算和处理。 功能： 构造函数：可以从二维数组、其他矩阵对象或行列数构造矩阵。 矩阵运算：支持矩阵的加减乘、转置、逆等运算。 求解行列式：计算矩阵的行列式值。 判断相等：判断两个矩阵是否相等。 Transform 基类(包含子类 Circle，Rectangle，Triangle，Diamond，Trapezium) 描述： 二维物体类，包括圆形、矩形、三角形、菱形等。 功能： 各种形状的构造：可以构造圆形、矩形、三角形、菱形等物体。 移动：可以移动物体的位置。 面积计算：可以计算物体的面积。 碰撞检测：可以检测物体之间的碰撞。 💡基础教程 ·基本思路：模块化开发，创建对象，绑定事件，加入游戏1.创建游戏对象 1234567 //声明全局游戏对象Game* mainGame;int main()&#123;//创建游戏对象mainGame = new Game; ······ 2.设置窗口大小和标题 12mainGame-&gt;setWindowSize(Vector2(800, 600));mainGame-&gt;setWindowTitle(&quot;Game demo&quot;); 3.设置游戏帧率 1mainGame-&gt;setTargetFrame(165); 4.创建游戏场景 1GameScene* scene = new GameScene; 5.添加场景到游戏中 1mainGame-&gt;setScene(scene); 6.创建游戏对象 1GameObject* player = new GameObject(new circle(25, Vector2(170, 70)), &quot;.\\\\pkq.png&quot;, 50, 50, true); 7.添加游戏对象到场景中 1scene-&gt;addGameObject(&quot;player&quot;, player); 8.创建游戏UI对象 1GameUI* xiaoxin = new GameUI(Vector2(0, 0), Vector2(50, 50), &quot;.\\\\xiaoxin.png&quot;, true); 9.添加UI对象到场景中 1scene-&gt;addGameUI(&quot;xiaoxin&quot;, xiaoxin); 10.创建文本UI对象 1GameUIText* text = new GameUIText(String(&quot;fps&quot;), Vector2(100, 100)); 11.添加文本UI到场景中 1scene-&gt;addGameUIText(&quot;text&quot;, text); 12.初始化窗口开始游戏 1mainGame-&gt;initWindow(); 其他常用代码1.获取游戏场景 1auto scene = mainGame-&gt;getScene(); 2.获取游戏对象 1auto player = scene-&gt;getGameObject(&quot;player&quot;); 3.获取UI对象 1auto xiaoxin = scene-&gt;getGameUI(&quot;xiaoxin&quot;); 4.获取UI文本对象 1auto text = scene-&gt;getGameUIText(&quot;text&quot;); 5.从场景删除物体 1scene-&gt;removeGameObject(&quot;player&quot;); 6.从场景删除UI对象 1scene-&gt;removeGameUI(&quot;xiaoxin&quot;); 7.从场景删除UI文本对象 1scene-&gt;removeGameUIText(&quot;text&quot;) 8.获取键盘输入 1234567891011121314151617181920212223242526auto key = mainGame-&gt;Input.getKey();//判断键盘输入if (key == KeyMessage::a)&#123; //键盘按下 a 的操作&#125;if (key == KeyMessage::d)&#123; //键盘按下 b 的操作&#125;if (key == KeyMessage::w)&#123; //键盘按下 c 的操作&#125;if (key == KeyMessage::s)&#123; //键盘按下 d 的操作&#125;if (key == KeyMessage::space)&#123; //键盘按下 空格 的操作&#125;if (key == KeyMessage::esc)&#123; //键盘按下 Esc退出键 的操作&#125; 进阶教程1.绑定游戏对象碰撞事件(物体碰撞调用) 12345678910111213//声明碰撞事件函数void trigger(GameObject* other)&#123; //other是与 绑定的的游戏对象 相碰撞的 ·游戏对象· 的指针 //碰撞输出名字 cout &lt;&lt; mainGame-&gt;getScene()-&gt;getName(other) &lt;&lt; endl;&#125;//绑定碰撞事件int main()&#123; ··· player-&gt;setOnCollision(trigger);&#125; 2.绑定游戏对象循环事件(每帧调用一次) 1234567891011//声明循环函数void loop()&#123; //循环事件&#125;//绑定循环函数int main()&#123; ··· player-&gt;setGameLoopFunc(loop);&#125; 3.绑定游戏对象点击事件(点击调用) 123456789101112131415161718192021//声明点击事件void onClick(int messageType, Vector2 position,GameObject* self)&#123; //输出被点击对象id名 cout&lt;&lt;mainGame-&gt;getScene()-&gt;getName(self)&lt;&lt;endl; //点击输出 if (messageType == MouseMessage::leftDown) cout &lt;&lt; &quot;左键按下&quot; &lt;&lt; endl; if (messageType == MouseMessage::leftUp) cout &lt;&lt; &quot;左键放开&quot; &lt;&lt; endl; if (messageType == MouseMessage::rightDown) cout &lt;&lt; &quot;右键按下&quot; &lt;&lt; endl; if (messageType == MouseMessage::rightUp) cout &lt;&lt; &quot;右键放开&quot; &lt;&lt; endl;&#125;//绑定点击事件int main()&#123; ··· player-&gt;mouseAction-&gt;setClickFunc(onClick);&#125; 完整示例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120#include &quot;JHMG engine.h&quot;using namespace JHMG_ENGINE;//声明全局游戏对象Game* mainGame;//声明函数void loop(GameObject* self);void trigger(GameObject* self, GameObject* other);void onClick(int messageType, Vector2 position,GameObject* self);int main()&#123; //创建游戏对象 mainGame = new Game; //设置窗口大小和标题 mainGame-&gt;setWindowSize(Vector2(800, 600)); mainGame-&gt;setWindowTitle(&quot;Game demo&quot;); //设置游戏帧率 mainGame-&gt;setTargetFrame(165); //创建游戏场景 GameScene* scene = new GameScene; //添加场景到游戏中 mainGame-&gt;setScene(scene); //创建UI对象 GameUI* xiaoxin = new GameUI(Vector2(0, 0), Vector2(800, 600), &quot;.\\\\background.jpg&quot;, true); //添加UI对象到场景中 scene-&gt;addGameUI(&quot;xiaoxin&quot;, xiaoxin); //创建文本UI GameUIText* text = new GameUIText(String(&quot;fps&quot;), Vector2(100, 100)); //添加文本UI到场景中 scene-&gt;addGameUIText(&quot;text&quot;, text); //创建游戏对象 GameObject* player = new GameObject(new Circle(25, Vector2(170, 70)), &quot;.\\\\pkq.png&quot;, 50, 50, true); //绑定游戏对象碰撞事件(物体碰撞调用) player-&gt;setOnCollision(trigger); //绑定游戏对象循环事件(每帧调用一次) player-&gt;setGameLoopFunc(loop); //添加游戏对象到场景中 scene-&gt;addGameObject(&quot;player&quot;, player); //创建游戏对象 GameObject* pikaqiu = new GameObject(new Circle(25, Vector2(270, 70)), &quot;.\\\\pkq.png&quot;, 50, 50, true); //绑定游戏对象点击事件(点击调用) pikaqiu-&gt;mouseAction-&gt;setClickFunc(onClick); //添加游戏对象到场景中 scene-&gt;addGameObject(&quot;pikaqiu&quot;, pikaqiu); //初始化窗口开始游戏 mainGame-&gt;initWindow();&#125;void loop(GameObject* self)&#123; //获取游戏场景 auto scene = mainGame-&gt;getScene(); //获取游戏对象 auto player = scene-&gt;getGameObject(&quot;player&quot;); //获取UI文本对象 auto text = scene-&gt;getGameUIText(&quot;text&quot;); //拼接显示fps text-&gt;text = &quot;fps:&quot; + std::to_string(int(1000 / mainGame-&gt;deltaTime)); //获取键盘输入 auto key = mainGame-&gt;input.getKey(); //判断键盘输入 if (key == KeyMessage::a) &#123; Vector2 currentPosition = player-&gt;Transform.Circle-&gt;getPosition(); //x = deltaX + X0 = V*t + X0 currentPosition += Vector2(-250, 0) * ((float)mainGame-&gt;deltaTime / 1000); player-&gt;Transform.Circle-&gt;move(currentPosition); &#125; if (key == KeyMessage::d) &#123; Vector2 currentPosition = player-&gt;Transform.Circle-&gt;getPosition(); currentPosition += Vector2(250, 0) * ((float)mainGame-&gt;deltaTime / 1000); player-&gt;Transform.Circle-&gt;move(currentPosition); &#125; if (key == KeyMessage::w) &#123; Vector2 currentPosition = player-&gt;Transform.Circle-&gt;getPosition(); currentPosition += Vector2(0, -250) * ((float)mainGame-&gt;deltaTime / 1000); player-&gt;Transform.Circle-&gt;move(currentPosition); &#125; if (key == KeyMessage::s) &#123; Vector2 currentPosition = player-&gt;Transform.Circle-&gt;getPosition(); currentPosition += Vector2(0, 250) * ((float)mainGame-&gt;deltaTime / 1000); player-&gt;Transform.Circle-&gt;move(currentPosition); &#125; if (key == KeyMessage::space) &#123; //删除物体 std::cout &lt;&lt; &quot;delete pikaqiu&quot; &lt;&lt; std::endl; scene-&gt;removeGameObject(&quot;pikaqiu&quot;); &#125; if (key == KeyMessage::esc) &#123; //退出游戏 exit(0); &#125;&#125;void trigger(GameObject* self,GameObject* other)&#123; //碰撞输出名字 std::cout &lt;&lt; mainGame-&gt;getScene()-&gt;getName(other) &lt;&lt; std::endl;&#125;void onClick(int messageType, Vector2 position,GameObject* self)&#123; std::cout&lt;&lt;mainGame-&gt;getScene()-&gt;getName(self)&lt;&lt; std::endl; //点击输出 if (messageType == MouseMessage::leftDown) std::cout &lt;&lt; &quot;左键按下&quot; &lt;&lt; std::endl; if (messageType == MouseMessage::leftUp) std::cout &lt;&lt; &quot;左键放开&quot; &lt;&lt; std::endl; if (messageType == MouseMessage::rightDown) std::cout &lt;&lt; &quot;右键按下&quot; &lt;&lt; std::endl; if (messageType == MouseMessage::rightUp) std::cout &lt;&lt; &quot;右键放开&quot; &lt;&lt; std::endl;&#125;","categories":[],"tags":[{"name":"游戏引擎","slug":"游戏引擎","permalink":"http://blog.jeanhua.cn/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"},{"name":"大作业","slug":"大作业","permalink":"http://blog.jeanhua.cn/tags/%E5%A4%A7%E4%BD%9C%E4%B8%9A/"}]},{"title":"GK320刷机","slug":"GK320刷机","date":"2024-04-26T12:19:00.000Z","updated":"2024-09-12T14:51:06.211Z","comments":true,"path":"2024/04/26/238a8dd14134/","permalink":"http://blog.jeanhua.cn/2024/04/26/238a8dd14134/","excerpt":"","text":"仓库地址Gitee页面 https://gitee.com/jeanhua/super-engine-for-GK320 GitHub页面 https://github.com/jeanhua/super-engine-for-GK320 提供GK320&#x2F;GK310智能电子学生证的破解刷机服务 这本来是我高一(2020)用易语言写的，到高二基本完成所有工作，旨在破解这个学生证，给无聊的高中生活加点乐趣，现在毕业了分享给大家，其中离不开我同学的帮助，在这里一并感谢他们使用说明下载发行版压缩包解压后进行以下操作：1.首先打开ADBDriverInstaller.exe这个程序，将学生证连接到电脑(注意：学生证自带的数据线是不支持数据传输的，仅能充电，所以请使用其他数据线)2.点击refresh按钮刷新，看到下方出现设备后，点击install(这步是安装adb驱动，以进行下一步工作)3.驱动安装完成后即可打开super engine for GK320.exe这个程序，页面如下 出现此页面即为成功4.单击mtk-su传输按钮，出现传输完成即可(这步是利用这个文件获取临时root权限)，一部学生证仅进行一步此操作5.接下来即可进行其他操作，根据需要即可 软件的一些说明apk安装：普通安装：安装至&#x2F;data&#x2F;app&#x2F; 目录，即正常安装目录，安装完可正常卸载系统预装目录：安装至系统预装目录，可正常卸载，但文件不会删除，恢复出厂设置后仍自动安装系统目录：安装至系统目录：此目录下的软件不能卸载，一般是系统软件，普通软件安装至此目录可能会有问题 软件安装问题部分软件安装至普通目录或系统预装目录出现问题，可进行覆盖安装(下文) 覆盖安装由于系统限制，不能在学生证上直接安装程序，但是可以覆盖安装先在学生证安装一个图形桌面，即手机桌面程序，推荐x桌面，然后安装文件管理器，推荐mix管理器，在里面打开apk安装包进行覆盖安装 注意一定不要在学生证设置里面的开发者设置乱搞！！！防止变砖（我高中时就有好多同学好奇去点导致手机变砖！）","categories":[{"name":"笔记","slug":"笔记","permalink":"http://blog.jeanhua.cn/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"刷机","slug":"刷机","permalink":"http://blog.jeanhua.cn/tags/%E5%88%B7%E6%9C%BA/"},{"name":"工具","slug":"工具","permalink":"http://blog.jeanhua.cn/tags/%E5%B7%A5%E5%85%B7/"}]}],"categories":[{"name":"C++","slug":"C","permalink":"http://blog.jeanhua.cn/categories/C/"},{"name":"随笔","slug":"随笔","permalink":"http://blog.jeanhua.cn/categories/%E9%9A%8F%E7%AC%94/"},{"name":"C语言","slug":"C语言","permalink":"http://blog.jeanhua.cn/categories/C%E8%AF%AD%E8%A8%80/"},{"name":"方法论","slug":"方法论","permalink":"http://blog.jeanhua.cn/categories/%E6%96%B9%E6%B3%95%E8%AE%BA/"},{"name":"爬虫","slug":"爬虫","permalink":"http://blog.jeanhua.cn/categories/%E7%88%AC%E8%99%AB/"},{"name":"高等数学","slug":"高等数学","permalink":"http://blog.jeanhua.cn/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"},{"name":"笔记","slug":"笔记","permalink":"http://blog.jeanhua.cn/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://blog.jeanhua.cn/tags/C/"},{"name":"计算机","slug":"计算机","permalink":"http://blog.jeanhua.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"高等教育","slug":"高等教育","permalink":"http://blog.jeanhua.cn/tags/%E9%AB%98%E7%AD%89%E6%95%99%E8%82%B2/"},{"name":"C语言","slug":"C语言","permalink":"http://blog.jeanhua.cn/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"软件","slug":"软件","permalink":"http://blog.jeanhua.cn/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"代码","slug":"代码","permalink":"http://blog.jeanhua.cn/tags/%E4%BB%A3%E7%A0%81/"},{"name":"flutter","slug":"flutter","permalink":"http://blog.jeanhua.cn/tags/flutter/"},{"name":"吐槽","slug":"吐槽","permalink":"http://blog.jeanhua.cn/tags/%E5%90%90%E6%A7%BD/"},{"name":"随笔","slug":"随笔","permalink":"http://blog.jeanhua.cn/tags/%E9%9A%8F%E7%AC%94/"},{"name":"python","slug":"python","permalink":"http://blog.jeanhua.cn/tags/python/"},{"name":"服务器","slug":"服务器","permalink":"http://blog.jeanhua.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"博客","slug":"博客","permalink":"http://blog.jeanhua.cn/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"ssh","slug":"ssh","permalink":"http://blog.jeanhua.cn/tags/ssh/"},{"name":"网站","slug":"网站","permalink":"http://blog.jeanhua.cn/tags/%E7%BD%91%E7%AB%99/"},{"name":"visual studio","slug":"visual-studio","permalink":"http://blog.jeanhua.cn/tags/visual-studio/"},{"name":"爬虫","slug":"爬虫","permalink":"http://blog.jeanhua.cn/tags/%E7%88%AC%E8%99%AB/"},{"name":"cuda","slug":"cuda","permalink":"http://blog.jeanhua.cn/tags/cuda/"},{"name":"markdown","slug":"markdown","permalink":"http://blog.jeanhua.cn/tags/markdown/"},{"name":"高等数学","slug":"高等数学","permalink":"http://blog.jeanhua.cn/tags/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"},{"name":"笔记","slug":"笔记","permalink":"http://blog.jeanhua.cn/tags/%E7%AC%94%E8%AE%B0/"},{"name":"游戏引擎","slug":"游戏引擎","permalink":"http://blog.jeanhua.cn/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"},{"name":"大作业","slug":"大作业","permalink":"http://blog.jeanhua.cn/tags/%E5%A4%A7%E4%BD%9C%E4%B8%9A/"},{"name":"刷机","slug":"刷机","permalink":"http://blog.jeanhua.cn/tags/%E5%88%B7%E6%9C%BA/"},{"name":"工具","slug":"工具","permalink":"http://blog.jeanhua.cn/tags/%E5%B7%A5%E5%85%B7/"}]}